{"mappings":"ACGA,MAAM,EAAS,SAAS,aAAa,CAAC,eAChC,EAAa,EAAO,aAAa,CAAC,0BAClC,EAAa,EAAO,aAAa,CAAC,0BAClC,EAAgB,EAAO,gBAAgB,CAAC,kBAGxC,EAAgB,EAAE,CAExB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAc,MAAM,CAAE,IACxC,CAAa,CAAC,EAAE,CAAG,CAAa,CAAC,EAAE,CAAC,aAAa,CAAC,OAAO,GAAG,CAgE9D,SAAS,IAGP,IAAM,EAAQ,EAAO,gBAAgB,CAAC,kBAEtC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CAErC,IAAM,EAAM,CAAK,CAAC,EAAE,CAAC,aAAa,CAAC,OAEnC,SAAW,CAAa,CAAC,EAAE,CAE3B,EAAI,GAAG,CAAG,QACZ,CACF,CAzEA,EAAW,gBAAgB,CAAC,QAAS,KACnC,IAAI,EAAW,CAAa,CAAC,EAAc,MAAM,CAAG,EAAE,CAEtD,EAAc,GAAG,GAEjB,EAAc,OAAO,CAAC,GAEtB,EAAc,OAAO,CAAC,AAAC,IAErB,EAAQ,KAAK,CAAC,UAAU,CAAG,uBAE3B,IAAM,EAAQ,EAAQ,WAAW,AAEjC,CAAA,EAAQ,KAAK,CAAC,SAAS,CAAG,CAAC,WAAW,EAAE,EA3BvB,GA2B4C,GAAG,CAAC,AACnE,GAGA,WAAW,KAET,IACA,EAAc,OAAO,CAAC,AAAC,IAErB,EAAQ,KAAK,CAAC,UAAU,CAAG,OAE3B,EAAQ,KAAK,CAAC,SAAS,CAAG,eAC5B,EACF,EAAG,IACL,GAGA,EAAW,gBAAgB,CAAC,QAAS,KACnC,IAAI,EAAW,CAAa,CAAC,EAAE,CAE/B,EAAc,KAAK,GAEnB,EAAc,IAAI,CAAC,GAEnB,EAAc,OAAO,CAAC,AAAC,IAErB,EAAQ,KAAK,CAAC,UAAU,CAAG,uBAE3B,IAAM,EAAQ,EAAQ,WAAW,AAEjC,CAAA,EAAQ,KAAK,CAAC,SAAS,CAAG,CAAC,YAAY,EAAE,EAzDxB,GAyD6C,GAAG,CAAC,AACpE,GAGA,WAAW,KAET,IACA,EAAc,OAAO,CAAC,AAAC,IAErB,EAAQ,KAAK,CAAC,UAAU,CAAG,OAE3B,EAAQ,KAAK,CAAC,SAAS,CAAG,eAC5B,EACF,EAAG,IACL,GAmBA,YAAY,KAEV,IAAI,EAAW,CAAa,CAAC,EAAE,CAE/B,EAAc,KAAK,GAEnB,EAAc,IAAI,CAAC,GAEnB,EAAc,OAAO,CAAC,AAAC,IAErB,EAAQ,KAAK,CAAC,UAAU,CAAG,uBAE3B,IAAM,EAAQ,EAAQ,WAAW,AAEjC,CAAA,EAAQ,KAAK,CAAC,SAAS,CAAG,CAAC,YAAY,EAAE,EAxGxB,GAwG6C,GAAG,CAAC,AACpE,GAGA,WAAW,KAET,IAEA,EAAc,OAAO,CAAC,AAAC,IAErB,EAAQ,KAAK,CAAC,UAAU,CAAG,OAE3B,EAAQ,KAAK,CAAC,SAAS,CAAG,eAC5B,EACF,EAAG,IACL,EAAG,KAUH,MAAM,EAAoB,SAAS,aAAa,CAC9C,kCA+BF,AA1BA,SAAS,IACP,IAAM,EAAU,EAAkB,aAAa,CAAC,mBAI1C,EAAY,AAFJ,EAAQ,gBAAgB,CAAC,iBAEhB,CAAC,EAAE,CAEpB,EAAQ,EAAU,WAAW,AAEnC,CAAA,EAAU,KAAK,CAAC,KAAK,CAAG,IAQxB,WAAW,KAET,EAAQ,WAAW,CAAC,GACpB,EAAU,KAAK,CAAC,KAAK,CAAG,CAAC,EAAE,EAAM,EAAE,CAAC,CACpC,GAEF,EATE,AAA+C,IAA/C,WAAW,AAHS,OAAO,gBAAgB,CAAC,GAGnB,kBAAkB,EAU/C","sources":["<anon>","src/assets/js/index.js"],"sourcesContent":["/******************** Start TV Carousel Section */ const CAROUSEL_GAP = 10;\nconst parent = document.querySelector(\"#tv-gallery\");\nconst prevButton = parent.querySelector(\".carousel-control-prev\");\nconst nextButton = parent.querySelector(\".carousel-control-next\");\nconst carouselItems = parent.querySelectorAll(\".carousel-item\");\n// create empty carousel image sources\nconst arrayCarousel = [];\n// copy all image sources from html\nfor(let i = 0; i < carouselItems.length; i++)arrayCarousel[i] = carouselItems[i].querySelector(\"img\").src;\n// listen on prev button click\nprevButton.addEventListener(\"click\", ()=>{\n    let imageURL1 = arrayCarousel[arrayCarousel.length - 1];\n    // remove the last image source\n    arrayCarousel.pop();\n    // add the image source at the beginning\n    arrayCarousel.unshift(imageURL1);\n    // loop all all carousel elements\n    carouselItems.forEach((element)=>{\n        // add transition to each carousel element\n        element.style.transition = \"all 0.3s ease-in-out\";\n        // get current carousel element width\n        const width = element.offsetWidth;\n        // move the carousel element position to the right (width + margin right)\n        element.style.transform = `translateX(${width + CAROUSEL_GAP}px)`;\n    });\n    // define a timeout\n    setTimeout(()=>{\n        // update carousel element\n        updateCarousel();\n        carouselItems.forEach((element)=>{\n            // remove transition from carousel element\n            element.style.transition = \"none\";\n            // move carousel element to the left\n            element.style.transform = \"translateX(0)\";\n        });\n    }, 300);\n});\n// listen on prev button click\nnextButton.addEventListener(\"click\", ()=>{\n    let imageURL1 = arrayCarousel[0];\n    // remove the first image source\n    arrayCarousel.shift();\n    // add the image source at the end\n    arrayCarousel.push(imageURL1);\n    // loop all all carousel elements\n    carouselItems.forEach((element)=>{\n        // add transition to each carousel element\n        element.style.transition = \"all 0.3s ease-in-out\";\n        // get current carousel element width\n        const width = element.offsetWidth;\n        // move the carousel element position to the right (width + margin right)\n        element.style.transform = `translateX(-${width + CAROUSEL_GAP}px)`;\n    });\n    // define a timeout\n    setTimeout(()=>{\n        // update carousel element\n        updateCarousel();\n        carouselItems.forEach((element)=>{\n            // remove transition from carousel element\n            element.style.transition = \"none\";\n            // move carousel element to the left\n            element.style.transform = \"translateX(0)\";\n        });\n    }, 300);\n});\n// upate carousel \nfunction updateCarousel() {\n    // Update image src\n    // query all carousel elements\n    const items = parent.querySelectorAll(\".carousel-item\");\n    // loop each element\n    for(let i = 0; i < items.length; i++){\n        // copy current img element\n        const img = items[i].querySelector(\"img\");\n        // get image source from array of image sources at index i\n        imageURL = arrayCarousel[i];\n        // update img source\n        img.src = imageURL;\n    }\n}\n// Auto slide image every 5s\nsetInterval(()=>{\n    // get first index from array image sources\n    let imageURL1 = arrayCarousel[0];\n    // remove the first element from array image sources\n    arrayCarousel.shift();\n    // add the first element at the end of array image sources\n    arrayCarousel.push(imageURL1);\n    // loop each carousel elements\n    carouselItems.forEach((element)=>{\n        // add trasition\n        element.style.transition = \"all 0.5s ease-in-out\";\n        // get current carousel width\n        const width = element.offsetWidth;\n        // move the carousel element to the right (width + margin right)\n        element.style.transform = `translateX(-${width + CAROUSEL_GAP}px)`;\n    });\n    // define a timeout\n    setTimeout(()=>{\n        // update carouel element\n        updateCarousel();\n        // loop each carousel elements\n        carouselItems.forEach((element)=>{\n            // remove trasition\n            element.style.transition = \"none\";\n            // reset carousel position\n            element.style.transform = \"translateX(0)\";\n        });\n    }, 500);\n}, 5000);\n/******************** End TV Carousel Section */ /******************* Start Fam Carousel Section */ // define a gallery playing state\nlet isPlayFamGallery = true;\n// select the gallery container\nconst famCarouselSlider = document.querySelector(\"#fam-gallery .carousel-slider\");\nlet prevDuration = null;\n// update gallery view\nfunction slideFam() {\n    const wrapper = famCarouselSlider.querySelector(\".carousel-inner\");\n    // select all gallery elements\n    const items = wrapper.querySelectorAll(\".carousel-item\");\n    // select first gallery element\n    const firstItem = items[0];\n    // get current gallery element width\n    const width = firstItem.offsetWidth;\n    // set first gallery element width to 0\n    firstItem.style.width = \"0\";\n    // get animation property of gallery element\n    const computedStyle = window.getComputedStyle(firstItem);\n    // copy transition duration\n    const transitionDuration = parseFloat(computedStyle.transitionDuration) * 1000;\n    // define a timeout\n    setTimeout(()=>{\n        // remove and insert the first gallery element back to gallery container (overwrite)\n        wrapper.appendChild(firstItem);\n        firstItem.style.width = `${width}px`;\n        slideFam();\n    // wait for trasition duration\n    }, transitionDuration);\n}\n// Initialize slide\nslideFam(); /******************* End Fam Carousel Section */ \n\n//# sourceMappingURL=index.3ee69097.js.map\n","/******************** Start TV Carousel Section */\r\n\r\nconst CAROUSEL_GAP = 10;\r\nconst parent = document.querySelector(\"#tv-gallery\");\r\nconst prevButton = parent.querySelector(\".carousel-control-prev\");\r\nconst nextButton = parent.querySelector(\".carousel-control-next\");\r\nconst carouselItems = parent.querySelectorAll(\".carousel-item\");\r\n\r\n// create empty carousel image sources\r\nconst arrayCarousel = [];\r\n// copy all image sources from html\r\nfor (let i = 0; i < carouselItems.length; i++) {\r\n  arrayCarousel[i] = carouselItems[i].querySelector(\"img\").src;\r\n}\r\n\r\n// listen on prev button click\r\nprevButton.addEventListener(\"click\", () => {\r\n  let imageURL = arrayCarousel[arrayCarousel.length - 1];\r\n  // remove the last image source\r\n  arrayCarousel.pop();\r\n  // add the image source at the beginning\r\n  arrayCarousel.unshift(imageURL);\r\n  // loop all all carousel elements\r\n  carouselItems.forEach((element) => {\r\n    // add transition to each carousel element\r\n    element.style.transition = \"all 0.3s ease-in-out\";\r\n    // get current carousel element width\r\n    const width = element.offsetWidth;\r\n    // move the carousel element position to the right (width + margin right)\r\n    element.style.transform = `translateX(${width + CAROUSEL_GAP}px)`;\r\n  });\r\n\r\n  // define a timeout\r\n  setTimeout(() => {\r\n    // update carousel element\r\n    updateCarousel();\r\n    carouselItems.forEach((element) => {\r\n      // remove transition from carousel element\r\n      element.style.transition = \"none\";\r\n      // move carousel element to the left\r\n      element.style.transform = \"translateX(0)\";\r\n    });\r\n  }, 300);\r\n});\r\n\r\n// listen on prev button click\r\nnextButton.addEventListener(\"click\", () => {\r\n  let imageURL = arrayCarousel[0];\r\n  // remove the first image source\r\n  arrayCarousel.shift();\r\n  // add the image source at the end\r\n  arrayCarousel.push(imageURL);\r\n  // loop all all carousel elements\r\n  carouselItems.forEach((element) => {\r\n    // add transition to each carousel element\r\n    element.style.transition = \"all 0.3s ease-in-out\";\r\n    // get current carousel element width\r\n    const width = element.offsetWidth;\r\n    // move the carousel element position to the right (width + margin right)\r\n    element.style.transform = `translateX(-${width + CAROUSEL_GAP}px)`;\r\n  });\r\n\r\n  // define a timeout\r\n  setTimeout(() => {\r\n    // update carousel element\r\n    updateCarousel();\r\n    carouselItems.forEach((element) => {\r\n      // remove transition from carousel element\r\n      element.style.transition = \"none\";\r\n      // move carousel element to the left\r\n      element.style.transform = \"translateX(0)\";\r\n    });\r\n  }, 300);\r\n});\r\n\r\n// upate carousel \r\nfunction updateCarousel() {\r\n  // Update image src\r\n  // query all carousel elements\r\n  const items = parent.querySelectorAll(\".carousel-item\");\r\n  // loop each element\r\n  for (let i = 0; i < items.length; i++) {\r\n    // copy current img element\r\n    const img = items[i].querySelector(\"img\");\r\n    // get image source from array of image sources at index i\r\n    imageURL = arrayCarousel[i];\r\n    // update img source\r\n    img.src = imageURL;\r\n  }\r\n}\r\n\r\n// Auto slide image every 5s\r\nsetInterval(() => {\r\n  // get first index from array image sources\r\n  let imageURL = arrayCarousel[0];\r\n  // remove the first element from array image sources\r\n  arrayCarousel.shift();\r\n  // add the first element at the end of array image sources\r\n  arrayCarousel.push(imageURL);\r\n  // loop each carousel elements\r\n  carouselItems.forEach((element) => {\r\n    // add trasition\r\n    element.style.transition = \"all 0.5s ease-in-out\";\r\n    // get current carousel width\r\n    const width = element.offsetWidth;\r\n    // move the carousel element to the right (width + margin right)\r\n    element.style.transform = `translateX(-${width + CAROUSEL_GAP}px)`;\r\n  });\r\n\r\n  // define a timeout\r\n  setTimeout(() => {\r\n    // update carouel element\r\n    updateCarousel();\r\n    // loop each carousel elements\r\n    carouselItems.forEach((element) => {\r\n      // remove trasition\r\n      element.style.transition = \"none\";\r\n      // reset carousel position\r\n      element.style.transform = \"translateX(0)\";\r\n    });\r\n  }, 500);\r\n}, 5000);\r\n\r\n/******************** End TV Carousel Section */\r\n\r\n/******************* Start Fam Carousel Section */\r\n\r\n// define a gallery playing state\r\nlet isPlayFamGallery = true;\r\n\r\n// select the gallery container\r\nconst famCarouselSlider = document.querySelector(\r\n  \"#fam-gallery .carousel-slider\"\r\n);\r\n\r\nlet prevDuration = null;\r\n// update gallery view\r\nfunction slideFam() {\r\n  const wrapper = famCarouselSlider.querySelector(\".carousel-inner\");\r\n  // select all gallery elements\r\n  const items = wrapper.querySelectorAll(\".carousel-item\");\r\n  // select first gallery element\r\n  const firstItem = items[0];\r\n  // get current gallery element width\r\n  const width = firstItem.offsetWidth;\r\n  // set first gallery element width to 0\r\n  firstItem.style.width = \"0\";\r\n  // get animation property of gallery element\r\n  const computedStyle = window.getComputedStyle(firstItem);\r\n  // copy transition duration\r\n  const transitionDuration =\r\n    parseFloat(computedStyle.transitionDuration) * 1000;\r\n\r\n  // define a timeout\r\n  setTimeout(() => {\r\n    // remove and insert the first gallery element back to gallery container (overwrite)\r\n    wrapper.appendChild(firstItem);\r\n    firstItem.style.width = `${width}px`;\r\n    slideFam();\r\n    // wait for trasition duration\r\n  }, transitionDuration);\r\n}\r\n// Initialize slide\r\nslideFam();\r\n\r\n/******************* End Fam Carousel Section */\r\n"],"names":["parent","document","querySelector","prevButton","nextButton","carouselItems","querySelectorAll","arrayCarousel","i","length","src","updateCarousel","items","img","imageURL","addEventListener","imageURL1","pop","unshift","forEach","element","style","transition","width","offsetWidth","transform","setTimeout","shift","push","setInterval","famCarouselSlider","slideFam","wrapper","firstItem","appendChild","parseFloat","computedStyle","window","getComputedStyle","transitionDuration"],"version":3,"file":"index.3ee69097.js.map"}